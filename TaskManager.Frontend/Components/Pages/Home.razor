@page "/"
@inject TasksClient Client

<PageTitle>Task Manager</PageTitle>

<div class="mt-2">
    <a class="btn btn-primary" role="button" href="/edittask">New Task</a>
</div>

@if (tasks is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-bordered table-hover mt-3">
        <thead class="table-dark">
            <th>Id</th>
            <th>Title</th>
            <th>Description</th>
            <th></th>
        </thead>
        <tbody>
            @foreach (var task in tasks)
            {
                <tr>
                    <td>@task.Id</td>
                    <td>@task.Title</td>
                    <td>@task.Description</td>
                    <td>
                        <div class="d-flex">
                            <a class="btn btn-primary me-2" role="button" href="@TaskUrl(task.Id)">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="@GetDeleteModalId(task)">
                                <i class="bi bi-x-lg"></i>
                            </button>
                        </div>
                        <DeleteTask Task="@task" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code
{
    private TaskSummary[]? tasks;

    protected override async Task OnInitializedAsync()
    {
        tasks = await Client.GetTasksAsync();
    }

    private static string TaskUrl(int id)
    {
        return $"/edittask/{id}";
    }

    private string GetDeleteModalId(TaskSummary task) //Busca o id da task selecionada
    {
        return $"#{DeleteTask.GetModalId(task)}";
    }    
}